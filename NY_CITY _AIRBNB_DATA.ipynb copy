{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv(\"/Users/morgancordray/Documents/DataClass/Project/dm-2/AB_NYC_2019.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>host_id</th>\n",
       "      <th>latitude</th>\n",
       "      <th>longitude</th>\n",
       "      <th>price</th>\n",
       "      <th>minimum_nights</th>\n",
       "      <th>number_of_reviews</th>\n",
       "      <th>reviews_per_month</th>\n",
       "      <th>calculated_host_listings_count</th>\n",
       "      <th>availability_365</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>count</td>\n",
       "      <td>4.889500e+04</td>\n",
       "      <td>4.889500e+04</td>\n",
       "      <td>48895.000000</td>\n",
       "      <td>48895.000000</td>\n",
       "      <td>48895.000000</td>\n",
       "      <td>48895.000000</td>\n",
       "      <td>48895.000000</td>\n",
       "      <td>38843.000000</td>\n",
       "      <td>48895.000000</td>\n",
       "      <td>48895.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>mean</td>\n",
       "      <td>1.901714e+07</td>\n",
       "      <td>6.762001e+07</td>\n",
       "      <td>40.728949</td>\n",
       "      <td>-73.952170</td>\n",
       "      <td>152.720687</td>\n",
       "      <td>7.029962</td>\n",
       "      <td>23.274466</td>\n",
       "      <td>1.373221</td>\n",
       "      <td>7.143982</td>\n",
       "      <td>112.781327</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>std</td>\n",
       "      <td>1.098311e+07</td>\n",
       "      <td>7.861097e+07</td>\n",
       "      <td>0.054530</td>\n",
       "      <td>0.046157</td>\n",
       "      <td>240.154170</td>\n",
       "      <td>20.510550</td>\n",
       "      <td>44.550582</td>\n",
       "      <td>1.680442</td>\n",
       "      <td>32.952519</td>\n",
       "      <td>131.622289</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>min</td>\n",
       "      <td>2.539000e+03</td>\n",
       "      <td>2.438000e+03</td>\n",
       "      <td>40.499790</td>\n",
       "      <td>-74.244420</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.010000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>25%</td>\n",
       "      <td>9.471945e+06</td>\n",
       "      <td>7.822033e+06</td>\n",
       "      <td>40.690100</td>\n",
       "      <td>-73.983070</td>\n",
       "      <td>69.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.190000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>50%</td>\n",
       "      <td>1.967728e+07</td>\n",
       "      <td>3.079382e+07</td>\n",
       "      <td>40.723070</td>\n",
       "      <td>-73.955680</td>\n",
       "      <td>106.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>0.720000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>45.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>75%</td>\n",
       "      <td>2.915218e+07</td>\n",
       "      <td>1.074344e+08</td>\n",
       "      <td>40.763115</td>\n",
       "      <td>-73.936275</td>\n",
       "      <td>175.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>24.000000</td>\n",
       "      <td>2.020000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>227.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>max</td>\n",
       "      <td>3.648724e+07</td>\n",
       "      <td>2.743213e+08</td>\n",
       "      <td>40.913060</td>\n",
       "      <td>-73.712990</td>\n",
       "      <td>10000.000000</td>\n",
       "      <td>1250.000000</td>\n",
       "      <td>629.000000</td>\n",
       "      <td>58.500000</td>\n",
       "      <td>327.000000</td>\n",
       "      <td>365.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 id       host_id      latitude     longitude         price  \\\n",
       "count  4.889500e+04  4.889500e+04  48895.000000  48895.000000  48895.000000   \n",
       "mean   1.901714e+07  6.762001e+07     40.728949    -73.952170    152.720687   \n",
       "std    1.098311e+07  7.861097e+07      0.054530      0.046157    240.154170   \n",
       "min    2.539000e+03  2.438000e+03     40.499790    -74.244420      0.000000   \n",
       "25%    9.471945e+06  7.822033e+06     40.690100    -73.983070     69.000000   \n",
       "50%    1.967728e+07  3.079382e+07     40.723070    -73.955680    106.000000   \n",
       "75%    2.915218e+07  1.074344e+08     40.763115    -73.936275    175.000000   \n",
       "max    3.648724e+07  2.743213e+08     40.913060    -73.712990  10000.000000   \n",
       "\n",
       "       minimum_nights  number_of_reviews  reviews_per_month  \\\n",
       "count    48895.000000       48895.000000       38843.000000   \n",
       "mean         7.029962          23.274466           1.373221   \n",
       "std         20.510550          44.550582           1.680442   \n",
       "min          1.000000           0.000000           0.010000   \n",
       "25%          1.000000           1.000000           0.190000   \n",
       "50%          3.000000           5.000000           0.720000   \n",
       "75%          5.000000          24.000000           2.020000   \n",
       "max       1250.000000         629.000000          58.500000   \n",
       "\n",
       "       calculated_host_listings_count  availability_365  \n",
       "count                    48895.000000      48895.000000  \n",
       "mean                         7.143982        112.781327  \n",
       "std                         32.952519        131.622289  \n",
       "min                          1.000000          0.000000  \n",
       "25%                          1.000000          0.000000  \n",
       "50%                          1.000000         45.000000  \n",
       "75%                          2.000000        227.000000  \n",
       "max                        327.000000        365.000000  "
      ]
     },
     "execution_count": 79,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>name</th>\n",
       "      <th>host_id</th>\n",
       "      <th>host_name</th>\n",
       "      <th>neighbourhood_group</th>\n",
       "      <th>neighbourhood</th>\n",
       "      <th>latitude</th>\n",
       "      <th>longitude</th>\n",
       "      <th>room_type</th>\n",
       "      <th>price</th>\n",
       "      <th>minimum_nights</th>\n",
       "      <th>number_of_reviews</th>\n",
       "      <th>last_review</th>\n",
       "      <th>reviews_per_month</th>\n",
       "      <th>calculated_host_listings_count</th>\n",
       "      <th>availability_365</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>2539</td>\n",
       "      <td>Clean &amp; quiet apt home by the park</td>\n",
       "      <td>2787</td>\n",
       "      <td>John</td>\n",
       "      <td>Brooklyn</td>\n",
       "      <td>Kensington</td>\n",
       "      <td>40.64749</td>\n",
       "      <td>-73.97237</td>\n",
       "      <td>Private room</td>\n",
       "      <td>149</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>2018-10-19</td>\n",
       "      <td>0.21</td>\n",
       "      <td>6</td>\n",
       "      <td>365</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>2595</td>\n",
       "      <td>Skylit Midtown Castle</td>\n",
       "      <td>2845</td>\n",
       "      <td>Jennifer</td>\n",
       "      <td>Manhattan</td>\n",
       "      <td>Midtown</td>\n",
       "      <td>40.75362</td>\n",
       "      <td>-73.98377</td>\n",
       "      <td>Entire home/apt</td>\n",
       "      <td>225</td>\n",
       "      <td>1</td>\n",
       "      <td>45</td>\n",
       "      <td>2019-05-21</td>\n",
       "      <td>0.38</td>\n",
       "      <td>2</td>\n",
       "      <td>355</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>3647</td>\n",
       "      <td>THE VILLAGE OF HARLEM....NEW YORK !</td>\n",
       "      <td>4632</td>\n",
       "      <td>Elisabeth</td>\n",
       "      <td>Manhattan</td>\n",
       "      <td>Harlem</td>\n",
       "      <td>40.80902</td>\n",
       "      <td>-73.94190</td>\n",
       "      <td>Private room</td>\n",
       "      <td>150</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>365</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>3831</td>\n",
       "      <td>Cozy Entire Floor of Brownstone</td>\n",
       "      <td>4869</td>\n",
       "      <td>LisaRoxanne</td>\n",
       "      <td>Brooklyn</td>\n",
       "      <td>Clinton Hill</td>\n",
       "      <td>40.68514</td>\n",
       "      <td>-73.95976</td>\n",
       "      <td>Entire home/apt</td>\n",
       "      <td>89</td>\n",
       "      <td>1</td>\n",
       "      <td>270</td>\n",
       "      <td>2019-07-05</td>\n",
       "      <td>4.64</td>\n",
       "      <td>1</td>\n",
       "      <td>194</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>5022</td>\n",
       "      <td>Entire Apt: Spacious Studio/Loft by central park</td>\n",
       "      <td>7192</td>\n",
       "      <td>Laura</td>\n",
       "      <td>Manhattan</td>\n",
       "      <td>East Harlem</td>\n",
       "      <td>40.79851</td>\n",
       "      <td>-73.94399</td>\n",
       "      <td>Entire home/apt</td>\n",
       "      <td>80</td>\n",
       "      <td>10</td>\n",
       "      <td>9</td>\n",
       "      <td>2018-11-19</td>\n",
       "      <td>0.10</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>48890</td>\n",
       "      <td>36484665</td>\n",
       "      <td>Charming one bedroom - newly renovated rowhouse</td>\n",
       "      <td>8232441</td>\n",
       "      <td>Sabrina</td>\n",
       "      <td>Brooklyn</td>\n",
       "      <td>Bedford-Stuyvesant</td>\n",
       "      <td>40.67853</td>\n",
       "      <td>-73.94995</td>\n",
       "      <td>Private room</td>\n",
       "      <td>70</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>48891</td>\n",
       "      <td>36485057</td>\n",
       "      <td>Affordable room in Bushwick/East Williamsburg</td>\n",
       "      <td>6570630</td>\n",
       "      <td>Marisol</td>\n",
       "      <td>Brooklyn</td>\n",
       "      <td>Bushwick</td>\n",
       "      <td>40.70184</td>\n",
       "      <td>-73.93317</td>\n",
       "      <td>Private room</td>\n",
       "      <td>40</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>48892</td>\n",
       "      <td>36485431</td>\n",
       "      <td>Sunny Studio at Historical Neighborhood</td>\n",
       "      <td>23492952</td>\n",
       "      <td>Ilgar &amp; Aysel</td>\n",
       "      <td>Manhattan</td>\n",
       "      <td>Harlem</td>\n",
       "      <td>40.81475</td>\n",
       "      <td>-73.94867</td>\n",
       "      <td>Entire home/apt</td>\n",
       "      <td>115</td>\n",
       "      <td>10</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>48893</td>\n",
       "      <td>36485609</td>\n",
       "      <td>43rd St. Time Square-cozy single bed</td>\n",
       "      <td>30985759</td>\n",
       "      <td>Taz</td>\n",
       "      <td>Manhattan</td>\n",
       "      <td>Hell's Kitchen</td>\n",
       "      <td>40.75751</td>\n",
       "      <td>-73.99112</td>\n",
       "      <td>Shared room</td>\n",
       "      <td>55</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>48894</td>\n",
       "      <td>36487245</td>\n",
       "      <td>Trendy duplex in the very heart of Hell's Kitchen</td>\n",
       "      <td>68119814</td>\n",
       "      <td>Christophe</td>\n",
       "      <td>Manhattan</td>\n",
       "      <td>Hell's Kitchen</td>\n",
       "      <td>40.76404</td>\n",
       "      <td>-73.98933</td>\n",
       "      <td>Private room</td>\n",
       "      <td>90</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>48895 rows × 16 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             id                                               name   host_id  \\\n",
       "0          2539                 Clean & quiet apt home by the park      2787   \n",
       "1          2595                              Skylit Midtown Castle      2845   \n",
       "2          3647                THE VILLAGE OF HARLEM....NEW YORK !      4632   \n",
       "3          3831                    Cozy Entire Floor of Brownstone      4869   \n",
       "4          5022   Entire Apt: Spacious Studio/Loft by central park      7192   \n",
       "...         ...                                                ...       ...   \n",
       "48890  36484665    Charming one bedroom - newly renovated rowhouse   8232441   \n",
       "48891  36485057      Affordable room in Bushwick/East Williamsburg   6570630   \n",
       "48892  36485431            Sunny Studio at Historical Neighborhood  23492952   \n",
       "48893  36485609               43rd St. Time Square-cozy single bed  30985759   \n",
       "48894  36487245  Trendy duplex in the very heart of Hell's Kitchen  68119814   \n",
       "\n",
       "           host_name neighbourhood_group       neighbourhood  latitude  \\\n",
       "0               John            Brooklyn          Kensington  40.64749   \n",
       "1           Jennifer           Manhattan             Midtown  40.75362   \n",
       "2          Elisabeth           Manhattan              Harlem  40.80902   \n",
       "3        LisaRoxanne            Brooklyn        Clinton Hill  40.68514   \n",
       "4              Laura           Manhattan         East Harlem  40.79851   \n",
       "...              ...                 ...                 ...       ...   \n",
       "48890        Sabrina            Brooklyn  Bedford-Stuyvesant  40.67853   \n",
       "48891        Marisol            Brooklyn            Bushwick  40.70184   \n",
       "48892  Ilgar & Aysel           Manhattan              Harlem  40.81475   \n",
       "48893            Taz           Manhattan      Hell's Kitchen  40.75751   \n",
       "48894     Christophe           Manhattan      Hell's Kitchen  40.76404   \n",
       "\n",
       "       longitude        room_type  price  minimum_nights  number_of_reviews  \\\n",
       "0      -73.97237     Private room    149               1                  9   \n",
       "1      -73.98377  Entire home/apt    225               1                 45   \n",
       "2      -73.94190     Private room    150               3                  0   \n",
       "3      -73.95976  Entire home/apt     89               1                270   \n",
       "4      -73.94399  Entire home/apt     80              10                  9   \n",
       "...          ...              ...    ...             ...                ...   \n",
       "48890  -73.94995     Private room     70               2                  0   \n",
       "48891  -73.93317     Private room     40               4                  0   \n",
       "48892  -73.94867  Entire home/apt    115              10                  0   \n",
       "48893  -73.99112      Shared room     55               1                  0   \n",
       "48894  -73.98933     Private room     90               7                  0   \n",
       "\n",
       "      last_review  reviews_per_month  calculated_host_listings_count  \\\n",
       "0      2018-10-19               0.21                               6   \n",
       "1      2019-05-21               0.38                               2   \n",
       "2             NaN                NaN                               1   \n",
       "3      2019-07-05               4.64                               1   \n",
       "4      2018-11-19               0.10                               1   \n",
       "...           ...                ...                             ...   \n",
       "48890         NaN                NaN                               2   \n",
       "48891         NaN                NaN                               2   \n",
       "48892         NaN                NaN                               1   \n",
       "48893         NaN                NaN                               6   \n",
       "48894         NaN                NaN                               1   \n",
       "\n",
       "       availability_365  \n",
       "0                   365  \n",
       "1                   355  \n",
       "2                   365  \n",
       "3                   194  \n",
       "4                     0  \n",
       "...                 ...  \n",
       "48890                 9  \n",
       "48891                36  \n",
       "48892                27  \n",
       "48893                 2  \n",
       "48894                23  \n",
       "\n",
       "[48895 rows x 16 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "dfgroupby = df.groupby([\"neighbourhood_group\",\"room_type\"]).mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>neighbourhood_group</th>\n",
       "      <th>room_type</th>\n",
       "      <th>id</th>\n",
       "      <th>host_id</th>\n",
       "      <th>latitude</th>\n",
       "      <th>longitude</th>\n",
       "      <th>price</th>\n",
       "      <th>minimum_nights</th>\n",
       "      <th>number_of_reviews</th>\n",
       "      <th>reviews_per_month</th>\n",
       "      <th>calculated_host_listings_count</th>\n",
       "      <th>availability_365</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>Bronx</td>\n",
       "      <td>Entire home/apt</td>\n",
       "      <td>2.269787e+07</td>\n",
       "      <td>1.037373e+08</td>\n",
       "      <td>40.848013</td>\n",
       "      <td>-73.880363</td>\n",
       "      <td>127.506596</td>\n",
       "      <td>5.957784</td>\n",
       "      <td>30.678100</td>\n",
       "      <td>2.238123</td>\n",
       "      <td>1.865435</td>\n",
       "      <td>158.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>Bronx</td>\n",
       "      <td>Private room</td>\n",
       "      <td>2.235896e+07</td>\n",
       "      <td>1.060786e+08</td>\n",
       "      <td>40.849158</td>\n",
       "      <td>-73.886172</td>\n",
       "      <td>66.788344</td>\n",
       "      <td>3.858896</td>\n",
       "      <td>25.018405</td>\n",
       "      <td>1.641660</td>\n",
       "      <td>2.338957</td>\n",
       "      <td>171.331288</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>Bronx</td>\n",
       "      <td>Shared room</td>\n",
       "      <td>2.705442e+07</td>\n",
       "      <td>1.123450e+08</td>\n",
       "      <td>40.840873</td>\n",
       "      <td>-73.893407</td>\n",
       "      <td>59.800000</td>\n",
       "      <td>3.366667</td>\n",
       "      <td>7.200000</td>\n",
       "      <td>1.351860</td>\n",
       "      <td>3.416667</td>\n",
       "      <td>154.216667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>Brooklyn</td>\n",
       "      <td>Entire home/apt</td>\n",
       "      <td>1.730117e+07</td>\n",
       "      <td>4.861704e+07</td>\n",
       "      <td>40.685211</td>\n",
       "      <td>-73.955603</td>\n",
       "      <td>178.327545</td>\n",
       "      <td>6.531332</td>\n",
       "      <td>27.945183</td>\n",
       "      <td>1.317630</td>\n",
       "      <td>1.837849</td>\n",
       "      <td>97.205147</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>Brooklyn</td>\n",
       "      <td>Private room</td>\n",
       "      <td>1.894125e+07</td>\n",
       "      <td>6.242636e+07</td>\n",
       "      <td>40.685513</td>\n",
       "      <td>-73.947150</td>\n",
       "      <td>76.500099</td>\n",
       "      <td>5.539479</td>\n",
       "      <td>21.086952</td>\n",
       "      <td>1.255758</td>\n",
       "      <td>2.547177</td>\n",
       "      <td>99.917983</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>5</td>\n",
       "      <td>Brooklyn</td>\n",
       "      <td>Shared room</td>\n",
       "      <td>2.358634e+07</td>\n",
       "      <td>1.040423e+08</td>\n",
       "      <td>40.669307</td>\n",
       "      <td>-73.948156</td>\n",
       "      <td>50.527845</td>\n",
       "      <td>7.753027</td>\n",
       "      <td>14.026634</td>\n",
       "      <td>1.070966</td>\n",
       "      <td>6.171913</td>\n",
       "      <td>178.007264</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>6</td>\n",
       "      <td>Manhattan</td>\n",
       "      <td>Entire home/apt</td>\n",
       "      <td>1.866860e+07</td>\n",
       "      <td>6.557697e+07</td>\n",
       "      <td>40.758266</td>\n",
       "      <td>-73.978402</td>\n",
       "      <td>249.239109</td>\n",
       "      <td>10.539283</td>\n",
       "      <td>17.815516</td>\n",
       "      <td>1.141610</td>\n",
       "      <td>18.922721</td>\n",
       "      <td>117.140996</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>7</td>\n",
       "      <td>Manhattan</td>\n",
       "      <td>Private room</td>\n",
       "      <td>1.880759e+07</td>\n",
       "      <td>6.982314e+07</td>\n",
       "      <td>40.776002</td>\n",
       "      <td>-73.968506</td>\n",
       "      <td>116.776622</td>\n",
       "      <td>5.446880</td>\n",
       "      <td>26.202706</td>\n",
       "      <td>1.448949</td>\n",
       "      <td>3.188048</td>\n",
       "      <td>101.845026</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>8</td>\n",
       "      <td>Manhattan</td>\n",
       "      <td>Shared room</td>\n",
       "      <td>2.115615e+07</td>\n",
       "      <td>9.666720e+07</td>\n",
       "      <td>40.770035</td>\n",
       "      <td>-73.971700</td>\n",
       "      <td>88.977083</td>\n",
       "      <td>6.766667</td>\n",
       "      <td>21.400000</td>\n",
       "      <td>1.792781</td>\n",
       "      <td>3.885417</td>\n",
       "      <td>138.572917</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>9</td>\n",
       "      <td>Queens</td>\n",
       "      <td>Entire home/apt</td>\n",
       "      <td>2.112772e+07</td>\n",
       "      <td>8.713280e+07</td>\n",
       "      <td>40.728993</td>\n",
       "      <td>-73.874459</td>\n",
       "      <td>147.050573</td>\n",
       "      <td>5.369752</td>\n",
       "      <td>28.933206</td>\n",
       "      <td>1.967302</td>\n",
       "      <td>1.677958</td>\n",
       "      <td>132.267176</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>10</td>\n",
       "      <td>Queens</td>\n",
       "      <td>Private room</td>\n",
       "      <td>2.197231e+07</td>\n",
       "      <td>1.008169e+08</td>\n",
       "      <td>40.732940</td>\n",
       "      <td>-73.871716</td>\n",
       "      <td>71.762456</td>\n",
       "      <td>5.120107</td>\n",
       "      <td>27.746441</td>\n",
       "      <td>1.947959</td>\n",
       "      <td>5.559905</td>\n",
       "      <td>149.222716</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>11</td>\n",
       "      <td>Queens</td>\n",
       "      <td>Shared room</td>\n",
       "      <td>2.469434e+07</td>\n",
       "      <td>1.123200e+08</td>\n",
       "      <td>40.734411</td>\n",
       "      <td>-73.872973</td>\n",
       "      <td>69.020202</td>\n",
       "      <td>4.232323</td>\n",
       "      <td>13.863636</td>\n",
       "      <td>1.522895</td>\n",
       "      <td>3.737374</td>\n",
       "      <td>192.186869</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>12</td>\n",
       "      <td>Staten Island</td>\n",
       "      <td>Entire home/apt</td>\n",
       "      <td>2.170833e+07</td>\n",
       "      <td>9.618779e+07</td>\n",
       "      <td>40.605728</td>\n",
       "      <td>-74.109460</td>\n",
       "      <td>173.846591</td>\n",
       "      <td>6.238636</td>\n",
       "      <td>33.278409</td>\n",
       "      <td>2.074400</td>\n",
       "      <td>1.596591</td>\n",
       "      <td>178.073864</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>13</td>\n",
       "      <td>Staten Island</td>\n",
       "      <td>Private room</td>\n",
       "      <td>2.106201e+07</td>\n",
       "      <td>1.017539e+08</td>\n",
       "      <td>40.614450</td>\n",
       "      <td>-74.103089</td>\n",
       "      <td>62.292553</td>\n",
       "      <td>3.632979</td>\n",
       "      <td>30.159574</td>\n",
       "      <td>1.699182</td>\n",
       "      <td>2.840426</td>\n",
       "      <td>226.361702</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>14</td>\n",
       "      <td>Staten Island</td>\n",
       "      <td>Shared room</td>\n",
       "      <td>3.061484e+07</td>\n",
       "      <td>7.713866e+07</td>\n",
       "      <td>40.609894</td>\n",
       "      <td>-74.091077</td>\n",
       "      <td>57.444444</td>\n",
       "      <td>2.333333</td>\n",
       "      <td>1.555556</td>\n",
       "      <td>1.332000</td>\n",
       "      <td>5.555556</td>\n",
       "      <td>64.777778</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   neighbourhood_group        room_type            id       host_id  \\\n",
       "0                Bronx  Entire home/apt  2.269787e+07  1.037373e+08   \n",
       "1                Bronx     Private room  2.235896e+07  1.060786e+08   \n",
       "2                Bronx      Shared room  2.705442e+07  1.123450e+08   \n",
       "3             Brooklyn  Entire home/apt  1.730117e+07  4.861704e+07   \n",
       "4             Brooklyn     Private room  1.894125e+07  6.242636e+07   \n",
       "5             Brooklyn      Shared room  2.358634e+07  1.040423e+08   \n",
       "6            Manhattan  Entire home/apt  1.866860e+07  6.557697e+07   \n",
       "7            Manhattan     Private room  1.880759e+07  6.982314e+07   \n",
       "8            Manhattan      Shared room  2.115615e+07  9.666720e+07   \n",
       "9               Queens  Entire home/apt  2.112772e+07  8.713280e+07   \n",
       "10              Queens     Private room  2.197231e+07  1.008169e+08   \n",
       "11              Queens      Shared room  2.469434e+07  1.123200e+08   \n",
       "12       Staten Island  Entire home/apt  2.170833e+07  9.618779e+07   \n",
       "13       Staten Island     Private room  2.106201e+07  1.017539e+08   \n",
       "14       Staten Island      Shared room  3.061484e+07  7.713866e+07   \n",
       "\n",
       "     latitude  longitude       price  minimum_nights  number_of_reviews  \\\n",
       "0   40.848013 -73.880363  127.506596        5.957784          30.678100   \n",
       "1   40.849158 -73.886172   66.788344        3.858896          25.018405   \n",
       "2   40.840873 -73.893407   59.800000        3.366667           7.200000   \n",
       "3   40.685211 -73.955603  178.327545        6.531332          27.945183   \n",
       "4   40.685513 -73.947150   76.500099        5.539479          21.086952   \n",
       "5   40.669307 -73.948156   50.527845        7.753027          14.026634   \n",
       "6   40.758266 -73.978402  249.239109       10.539283          17.815516   \n",
       "7   40.776002 -73.968506  116.776622        5.446880          26.202706   \n",
       "8   40.770035 -73.971700   88.977083        6.766667          21.400000   \n",
       "9   40.728993 -73.874459  147.050573        5.369752          28.933206   \n",
       "10  40.732940 -73.871716   71.762456        5.120107          27.746441   \n",
       "11  40.734411 -73.872973   69.020202        4.232323          13.863636   \n",
       "12  40.605728 -74.109460  173.846591        6.238636          33.278409   \n",
       "13  40.614450 -74.103089   62.292553        3.632979          30.159574   \n",
       "14  40.609894 -74.091077   57.444444        2.333333           1.555556   \n",
       "\n",
       "    reviews_per_month  calculated_host_listings_count  availability_365  \n",
       "0            2.238123                        1.865435        158.000000  \n",
       "1            1.641660                        2.338957        171.331288  \n",
       "2            1.351860                        3.416667        154.216667  \n",
       "3            1.317630                        1.837849         97.205147  \n",
       "4            1.255758                        2.547177         99.917983  \n",
       "5            1.070966                        6.171913        178.007264  \n",
       "6            1.141610                       18.922721        117.140996  \n",
       "7            1.448949                        3.188048        101.845026  \n",
       "8            1.792781                        3.885417        138.572917  \n",
       "9            1.967302                        1.677958        132.267176  \n",
       "10           1.947959                        5.559905        149.222716  \n",
       "11           1.522895                        3.737374        192.186869  \n",
       "12           2.074400                        1.596591        178.073864  \n",
       "13           1.699182                        2.840426        226.361702  \n",
       "14           1.332000                        5.555556         64.777778  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dfgroupby = dfgroupby.reset_index()\n",
    "dfgroupby"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "# give each neighbourhood group its own variable\n",
    "bronx = dfgroupby[dfgroupby[\"neighbourhood_group\"]==\"Bronx\"]\n",
    "Brooklyn = dfgroupby[dfgroupby[\"neighbourhood_group\"]==\"Brooklyn\"]\n",
    "Manhattan = dfgroupby[dfgroupby[\"neighbourhood_group\"]==\"Manhattan\"]\n",
    "Queens = dfgroupby[dfgroupby[\"neighbourhood_group\"]==\"Queens\"]\n",
    "Staten_Island = dfgroupby[dfgroupby[\"neighbourhood_group\"]==\"Staten Island\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>neighbourhood_group</th>\n",
       "      <th>room_type</th>\n",
       "      <th>id</th>\n",
       "      <th>host_id</th>\n",
       "      <th>latitude</th>\n",
       "      <th>longitude</th>\n",
       "      <th>price</th>\n",
       "      <th>minimum_nights</th>\n",
       "      <th>number_of_reviews</th>\n",
       "      <th>reviews_per_month</th>\n",
       "      <th>calculated_host_listings_count</th>\n",
       "      <th>availability_365</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>Bronx</td>\n",
       "      <td>Entire home/apt</td>\n",
       "      <td>2.269787e+07</td>\n",
       "      <td>1.037373e+08</td>\n",
       "      <td>40.848013</td>\n",
       "      <td>-73.880363</td>\n",
       "      <td>127.506596</td>\n",
       "      <td>5.957784</td>\n",
       "      <td>30.678100</td>\n",
       "      <td>2.238123</td>\n",
       "      <td>1.865435</td>\n",
       "      <td>158.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>Bronx</td>\n",
       "      <td>Private room</td>\n",
       "      <td>2.235896e+07</td>\n",
       "      <td>1.060786e+08</td>\n",
       "      <td>40.849158</td>\n",
       "      <td>-73.886172</td>\n",
       "      <td>66.788344</td>\n",
       "      <td>3.858896</td>\n",
       "      <td>25.018405</td>\n",
       "      <td>1.641660</td>\n",
       "      <td>2.338957</td>\n",
       "      <td>171.331288</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>Bronx</td>\n",
       "      <td>Shared room</td>\n",
       "      <td>2.705442e+07</td>\n",
       "      <td>1.123450e+08</td>\n",
       "      <td>40.840873</td>\n",
       "      <td>-73.893407</td>\n",
       "      <td>59.800000</td>\n",
       "      <td>3.366667</td>\n",
       "      <td>7.200000</td>\n",
       "      <td>1.351860</td>\n",
       "      <td>3.416667</td>\n",
       "      <td>154.216667</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  neighbourhood_group        room_type            id       host_id   latitude  \\\n",
       "0               Bronx  Entire home/apt  2.269787e+07  1.037373e+08  40.848013   \n",
       "1               Bronx     Private room  2.235896e+07  1.060786e+08  40.849158   \n",
       "2               Bronx      Shared room  2.705442e+07  1.123450e+08  40.840873   \n",
       "\n",
       "   longitude       price  minimum_nights  number_of_reviews  \\\n",
       "0 -73.880363  127.506596        5.957784          30.678100   \n",
       "1 -73.886172   66.788344        3.858896          25.018405   \n",
       "2 -73.893407   59.800000        3.366667           7.200000   \n",
       "\n",
       "   reviews_per_month  calculated_host_listings_count  availability_365  \n",
       "0           2.238123                        1.865435        158.000000  \n",
       "1           1.641660                        2.338957        171.331288  \n",
       "2           1.351860                        3.416667        154.216667  "
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bronx"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plot of Price on Host Listings\n",
    "bronx_map = plt.scatter(bronx[\"calculated_host_listings_count\"],bronx[\"price\"], color = \"red\")\n",
    "brooklyn_map = plt.scatter(Brooklyn[\"calculated_host_listings_count\"],Brooklyn[\"price\"], color = \"purple\")\n",
    "Manhattan_map = plt.scatter(Manhattan[\"calculated_host_listings_count\"],Manhattan[\"price\"], color = \"blue\")\n",
    "Queens_map = plt.scatter(Queens[\"calculated_host_listings_count\"],Queens[\"price\"], color = \"orange\")\n",
    "Staten_Island_map = plt.scatter(Staten_Island[\"calculated_host_listings_count\"],Staten_Island[\"price\"], color = \"black\")\n",
    "plt.xlim(0,10)\n",
    "plt.xlabel(\"Host Listings\")\n",
    "plt.ylabel(\"Price\")\n",
    "plt.legend((bronx_map, brooklyn_map, Manhattan_map,Queens_map,Staten_Island_map),\n",
    "            (\"Bronx\", \"Brooklyn\", \"Manhattan\", \"Queens\", \"Staten Island\"),\n",
    "           scatterpoints = 1,\n",
    "           loc=\"upper right\",\n",
    "           ncol=2,\n",
    "           fontsize =10)\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "can't multiply sequence by non-int of type 'list'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-11-5e1a9a216007>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      5\u001b[0m     \u001b[0mplot_regression_line\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mb\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 7\u001b[0;31m \u001b[0mmain\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      8\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m<ipython-input-11-5e1a9a216007>\u001b[0m in \u001b[0;36mmain\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m     \u001b[0mx\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdfgroupby\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"price\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_list\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m     \u001b[0my\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdfgroupby\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"calculated_host_listings_count\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_list\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m     \u001b[0mb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mestimate_coefficients\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m     \u001b[0mplot_regression_line\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mb\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m<ipython-input-10-eee7f9fe4aef>\u001b[0m in \u001b[0;36mestimate_coefficients\u001b[0;34m(x, y)\u001b[0m\n\u001b[1;32m      3\u001b[0m     \u001b[0mmean_x\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmean_y\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmean\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmean\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m     \u001b[0mxy\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0my\u001b[0m \u001b[0;34m-\u001b[0m \u001b[0mn\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0mmean_y\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0mmean_x\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      6\u001b[0m     \u001b[0mxx\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0mx\u001b[0m \u001b[0;34m-\u001b[0m \u001b[0mn\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0mmean_x\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0mmean_x\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mTypeError\u001b[0m: can't multiply sequence by non-int of type 'list'"
     ]
    }
   ],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<BarContainer object of 3 artists>"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Bar Chart of prices in each group\n",
    "plt.bar(\"Bronx\" , bronx[\"price\"], color = \"red\")\n",
    "plt.bar(\"Brooklyn\", Brooklyn[\"price\"],color = \"purple\")\n",
    "plt.bar(\"Manhattan\", Manhattan[\"price\"], color = \"blue\")\n",
    "plt.bar(\"Queens\", Queens[\"price\"], color = \"orange\")\n",
    "plt.bar(\"Staten Island\", Staten_Island[\"price\"], color = \"black\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x118469e90>"
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plot of Price on Total number of days available for rent\n",
    "bronx_map = plt.scatter(bronx[\"availability_365\"],bronx[\"price\"], color = \"red\")\n",
    "brooklyn_map = plt.scatter(Brooklyn[\"availability_365\"],Brooklyn[\"price\"], color = \"purple\")\n",
    "Manhattan_map = plt.scatter(Manhattan[\"availability_365\"],Manhattan[\"price\"], color = \"blue\")\n",
    "Queens_map = plt.scatter(Queens[\"availability_365\"],Queens[\"price\"], color = \"orange\")\n",
    "Staten_Island_map = plt.scatter(Staten_Island[\"availability_365\"],Staten_Island[\"price\"], color = \"black\")\n",
    "plt.xlabel(\"Total number of days available for rent\")\n",
    "plt.ylabel(\"Price\")\n",
    "plt.legend((bronx_map, brooklyn_map, Manhattan_map,Queens_map,Staten_Island_map),\n",
    "            (\"Bronx\", \"Brooklyn\", \"Manhattan\", \"Queens\", \"Staten Island\"),\n",
    "           scatterpoints = 1,\n",
    "           loc=\"upper right\",\n",
    "           ncol=2,\n",
    "           fontsize =10)\n",
    "#z = np.polyfit(bronx[\"availability_365\"], bronx[\"price\"], 1)\n",
    "#p = np.poly1d(z)\n",
    "#plt.plot(bronx[\"availability_365\"],p(bronx[\"availability_365\"]),\"r--\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Price')"
      ]
     },
     "execution_count": 76,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# plot of reviews per month on price\n",
    "bronx_map = plt.scatter(bronx[\"reviews_per_month\"],bronx[\"price\"], color = \"red\")\n",
    "brooklyn_map = plt.scatter(Brooklyn[\"reviews_per_month\"],Brooklyn[\"price\"], color = \"purple\")\n",
    "Manhattan_map = plt.scatter(Manhattan[\"reviews_per_month\"],Manhattan[\"price\"], color = \"blue\")\n",
    "Queens_map = plt.scatter(Queens[\"reviews_per_month\"],Queens[\"price\"], color = \"orange\")\n",
    "Staten_Island_map = plt.scatter(Staten_Island[\"reviews_per_month\"], Staten_Island[\"price\"], color = \"black\")\n",
    "plt.legend((bronx_map, brooklyn_map, Manhattan_map,Queens_map,Staten_Island_map),\n",
    "            (\"Bronx\", \"Brooklyn\", \"Manhattan\", \"Queens\", \"Staten Island\"),\n",
    "           scatterpoints = 1,\n",
    "           loc=\"upper right\",\n",
    "           ncol=2,\n",
    "           fontsize =10)\n",
    "plt.xlabel(\"Reviews per Month\")\n",
    "plt.ylabel(\"Price\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14],\n",
       " <a list of 15 Text xticklabel objects>)"
      ]
     },
     "execution_count": 98,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#xticks = [\"Private room\",]\n",
    "plt.bar(\"home/apt-Bronx\", bronx[\"price\"][0],color = \"red\")\n",
    "plt.bar(\"Private-room-Bronx\", bronx[\"price\"][1],color = \"red\")\n",
    "plt.bar(\"Shared-room-Bronx\", bronx[\"price\"][2],color = \"red\")\n",
    "plt.bar(\"home/apt-Brook\", Brooklyn[\"price\"][3],color = \"purple\")\n",
    "plt.bar(\"Private-room-Brook\", Brooklyn[\"price\"][4],color = \"purple\")\n",
    "plt.bar(\"Shared-room-Brook\", Brooklyn[\"price\"][5],color = \"purple\")\n",
    "plt.bar(\"home/apt-Man\" , Manhattan[\"price\"][6],color = \"blue\")\n",
    "plt.bar(\"Private-room-Man\" , Manhattan[\"price\"][7],color = \"blue\")\n",
    "plt.bar(\"Shared-room-Man\" , Manhattan[\"price\"][8],color = \"blue\")\n",
    "plt.bar(\"home/apt-Que\" , Queens[\"price\"][9],color = \"orange\")\n",
    "plt.bar(\"Private-room-Que\" , Queens[\"price\"][10],color = \"orange\")\n",
    "plt.bar(\"Shared-room-Que\" , Queens[\"price\"][11],color = \"orange\")\n",
    "plt.bar(\"home/apt-Sta\" , Staten_Island[\"price\"][12],color = \"black\")\n",
    "plt.bar(\"Private-room-Sta\" , Staten_Island[\"price\"][13],color = \"black\")\n",
    "plt.bar(\"Shared-room-Sta\" , Staten_Island[\"price\"][14],color = \"black\")\n",
    "#plt.figure(figsize=(30,30))\n",
    "plt.xticks(rotation=60, ha='right')\n",
    "#plt.tight_layout()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3    178.327545\n",
       "4     76.500099\n",
       "5     50.527845\n",
       "Name: price, dtype: float64"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Brooklyn[\"price\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "6    249.239109\n",
       "7    116.776622\n",
       "8     88.977083\n",
       "Name: price, dtype: float64"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Manhattan[\"price\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "manhattan_df = df[df[\"neighbourhood_group\"] == \"Manhattan\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Does Lower Prices Cause greater number of listings\n",
    "plt.scatter(manhattan_df[\"calculated_host_listings_count\"],manhattan_df[\"price\"], color = \"blue\")\n",
    "plt.xlim(0,100)\n",
    "#plt.ylim(0,4000)\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>name</th>\n",
       "      <th>host_id</th>\n",
       "      <th>host_name</th>\n",
       "      <th>neighbourhood_group</th>\n",
       "      <th>neighbourhood</th>\n",
       "      <th>latitude</th>\n",
       "      <th>longitude</th>\n",
       "      <th>room_type</th>\n",
       "      <th>price</th>\n",
       "      <th>minimum_nights</th>\n",
       "      <th>number_of_reviews</th>\n",
       "      <th>last_review</th>\n",
       "      <th>reviews_per_month</th>\n",
       "      <th>calculated_host_listings_count</th>\n",
       "      <th>availability_365</th>\n",
       "      <th>h_listing_bins</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>2539</td>\n",
       "      <td>Clean &amp; quiet apt home by the park</td>\n",
       "      <td>2787</td>\n",
       "      <td>John</td>\n",
       "      <td>Brooklyn</td>\n",
       "      <td>Kensington</td>\n",
       "      <td>40.64749</td>\n",
       "      <td>-73.97237</td>\n",
       "      <td>Private room</td>\n",
       "      <td>149</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>2018-10-19</td>\n",
       "      <td>0.21</td>\n",
       "      <td>6</td>\n",
       "      <td>365</td>\n",
       "      <td>0-50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>2595</td>\n",
       "      <td>Skylit Midtown Castle</td>\n",
       "      <td>2845</td>\n",
       "      <td>Jennifer</td>\n",
       "      <td>Manhattan</td>\n",
       "      <td>Midtown</td>\n",
       "      <td>40.75362</td>\n",
       "      <td>-73.98377</td>\n",
       "      <td>Entire home/apt</td>\n",
       "      <td>225</td>\n",
       "      <td>1</td>\n",
       "      <td>45</td>\n",
       "      <td>2019-05-21</td>\n",
       "      <td>0.38</td>\n",
       "      <td>2</td>\n",
       "      <td>355</td>\n",
       "      <td>0-50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>3647</td>\n",
       "      <td>THE VILLAGE OF HARLEM....NEW YORK !</td>\n",
       "      <td>4632</td>\n",
       "      <td>Elisabeth</td>\n",
       "      <td>Manhattan</td>\n",
       "      <td>Harlem</td>\n",
       "      <td>40.80902</td>\n",
       "      <td>-73.94190</td>\n",
       "      <td>Private room</td>\n",
       "      <td>150</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>365</td>\n",
       "      <td>0-50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>3831</td>\n",
       "      <td>Cozy Entire Floor of Brownstone</td>\n",
       "      <td>4869</td>\n",
       "      <td>LisaRoxanne</td>\n",
       "      <td>Brooklyn</td>\n",
       "      <td>Clinton Hill</td>\n",
       "      <td>40.68514</td>\n",
       "      <td>-73.95976</td>\n",
       "      <td>Entire home/apt</td>\n",
       "      <td>89</td>\n",
       "      <td>1</td>\n",
       "      <td>270</td>\n",
       "      <td>2019-07-05</td>\n",
       "      <td>4.64</td>\n",
       "      <td>1</td>\n",
       "      <td>194</td>\n",
       "      <td>0-50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>5022</td>\n",
       "      <td>Entire Apt: Spacious Studio/Loft by central park</td>\n",
       "      <td>7192</td>\n",
       "      <td>Laura</td>\n",
       "      <td>Manhattan</td>\n",
       "      <td>East Harlem</td>\n",
       "      <td>40.79851</td>\n",
       "      <td>-73.94399</td>\n",
       "      <td>Entire home/apt</td>\n",
       "      <td>80</td>\n",
       "      <td>10</td>\n",
       "      <td>9</td>\n",
       "      <td>2018-11-19</td>\n",
       "      <td>0.10</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0-50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>48890</td>\n",
       "      <td>36484665</td>\n",
       "      <td>Charming one bedroom - newly renovated rowhouse</td>\n",
       "      <td>8232441</td>\n",
       "      <td>Sabrina</td>\n",
       "      <td>Brooklyn</td>\n",
       "      <td>Bedford-Stuyvesant</td>\n",
       "      <td>40.67853</td>\n",
       "      <td>-73.94995</td>\n",
       "      <td>Private room</td>\n",
       "      <td>70</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>9</td>\n",
       "      <td>0-50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>48891</td>\n",
       "      <td>36485057</td>\n",
       "      <td>Affordable room in Bushwick/East Williamsburg</td>\n",
       "      <td>6570630</td>\n",
       "      <td>Marisol</td>\n",
       "      <td>Brooklyn</td>\n",
       "      <td>Bushwick</td>\n",
       "      <td>40.70184</td>\n",
       "      <td>-73.93317</td>\n",
       "      <td>Private room</td>\n",
       "      <td>40</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>36</td>\n",
       "      <td>0-50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>48892</td>\n",
       "      <td>36485431</td>\n",
       "      <td>Sunny Studio at Historical Neighborhood</td>\n",
       "      <td>23492952</td>\n",
       "      <td>Ilgar &amp; Aysel</td>\n",
       "      <td>Manhattan</td>\n",
       "      <td>Harlem</td>\n",
       "      <td>40.81475</td>\n",
       "      <td>-73.94867</td>\n",
       "      <td>Entire home/apt</td>\n",
       "      <td>115</td>\n",
       "      <td>10</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>27</td>\n",
       "      <td>0-50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>48893</td>\n",
       "      <td>36485609</td>\n",
       "      <td>43rd St. Time Square-cozy single bed</td>\n",
       "      <td>30985759</td>\n",
       "      <td>Taz</td>\n",
       "      <td>Manhattan</td>\n",
       "      <td>Hell's Kitchen</td>\n",
       "      <td>40.75751</td>\n",
       "      <td>-73.99112</td>\n",
       "      <td>Shared room</td>\n",
       "      <td>55</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>0-50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>48894</td>\n",
       "      <td>36487245</td>\n",
       "      <td>Trendy duplex in the very heart of Hell's Kitchen</td>\n",
       "      <td>68119814</td>\n",
       "      <td>Christophe</td>\n",
       "      <td>Manhattan</td>\n",
       "      <td>Hell's Kitchen</td>\n",
       "      <td>40.76404</td>\n",
       "      <td>-73.98933</td>\n",
       "      <td>Private room</td>\n",
       "      <td>90</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>23</td>\n",
       "      <td>0-50</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>48895 rows × 17 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             id                                               name   host_id  \\\n",
       "0          2539                 Clean & quiet apt home by the park      2787   \n",
       "1          2595                              Skylit Midtown Castle      2845   \n",
       "2          3647                THE VILLAGE OF HARLEM....NEW YORK !      4632   \n",
       "3          3831                    Cozy Entire Floor of Brownstone      4869   \n",
       "4          5022   Entire Apt: Spacious Studio/Loft by central park      7192   \n",
       "...         ...                                                ...       ...   \n",
       "48890  36484665    Charming one bedroom - newly renovated rowhouse   8232441   \n",
       "48891  36485057      Affordable room in Bushwick/East Williamsburg   6570630   \n",
       "48892  36485431            Sunny Studio at Historical Neighborhood  23492952   \n",
       "48893  36485609               43rd St. Time Square-cozy single bed  30985759   \n",
       "48894  36487245  Trendy duplex in the very heart of Hell's Kitchen  68119814   \n",
       "\n",
       "           host_name neighbourhood_group       neighbourhood  latitude  \\\n",
       "0               John            Brooklyn          Kensington  40.64749   \n",
       "1           Jennifer           Manhattan             Midtown  40.75362   \n",
       "2          Elisabeth           Manhattan              Harlem  40.80902   \n",
       "3        LisaRoxanne            Brooklyn        Clinton Hill  40.68514   \n",
       "4              Laura           Manhattan         East Harlem  40.79851   \n",
       "...              ...                 ...                 ...       ...   \n",
       "48890        Sabrina            Brooklyn  Bedford-Stuyvesant  40.67853   \n",
       "48891        Marisol            Brooklyn            Bushwick  40.70184   \n",
       "48892  Ilgar & Aysel           Manhattan              Harlem  40.81475   \n",
       "48893            Taz           Manhattan      Hell's Kitchen  40.75751   \n",
       "48894     Christophe           Manhattan      Hell's Kitchen  40.76404   \n",
       "\n",
       "       longitude        room_type  price  minimum_nights  number_of_reviews  \\\n",
       "0      -73.97237     Private room    149               1                  9   \n",
       "1      -73.98377  Entire home/apt    225               1                 45   \n",
       "2      -73.94190     Private room    150               3                  0   \n",
       "3      -73.95976  Entire home/apt     89               1                270   \n",
       "4      -73.94399  Entire home/apt     80              10                  9   \n",
       "...          ...              ...    ...             ...                ...   \n",
       "48890  -73.94995     Private room     70               2                  0   \n",
       "48891  -73.93317     Private room     40               4                  0   \n",
       "48892  -73.94867  Entire home/apt    115              10                  0   \n",
       "48893  -73.99112      Shared room     55               1                  0   \n",
       "48894  -73.98933     Private room     90               7                  0   \n",
       "\n",
       "      last_review  reviews_per_month  calculated_host_listings_count  \\\n",
       "0      2018-10-19               0.21                               6   \n",
       "1      2019-05-21               0.38                               2   \n",
       "2             NaN                NaN                               1   \n",
       "3      2019-07-05               4.64                               1   \n",
       "4      2018-11-19               0.10                               1   \n",
       "...           ...                ...                             ...   \n",
       "48890         NaN                NaN                               2   \n",
       "48891         NaN                NaN                               2   \n",
       "48892         NaN                NaN                               1   \n",
       "48893         NaN                NaN                               6   \n",
       "48894         NaN                NaN                               1   \n",
       "\n",
       "       availability_365 h_listing_bins  \n",
       "0                   365           0-50  \n",
       "1                   355           0-50  \n",
       "2                   365           0-50  \n",
       "3                   194           0-50  \n",
       "4                     0           0-50  \n",
       "...                 ...            ...  \n",
       "48890                 9           0-50  \n",
       "48891                36           0-50  \n",
       "48892                27           0-50  \n",
       "48893                 2           0-50  \n",
       "48894                23           0-50  \n",
       "\n",
       "[48895 rows x 17 columns]"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bins = [0,50,100,150,200,250,300,350,400]\n",
    "bin_labels = [\"0-50\",\"50-100\",\"100-150\",\"150-200\",\"200-250\",\"250-300\",\"300-350\",\"350-400\"]\n",
    "xticks = \"Bronx\", \"Brooklyn\", \"Manhattan\", \"Queens\", \"Staten Island\"\n",
    "df_cut= pd.cut(df[\"calculated_host_listings_count\"], bins, labels=bin_labels)\n",
    "df[\"h_listing_bins\"] = df_cut\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [],
   "source": [
    "gbroom_df = df.groupby([\"room_type\"]).mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>host_id</th>\n",
       "      <th>latitude</th>\n",
       "      <th>longitude</th>\n",
       "      <th>price</th>\n",
       "      <th>minimum_nights</th>\n",
       "      <th>number_of_reviews</th>\n",
       "      <th>reviews_per_month</th>\n",
       "      <th>calculated_host_listings_count</th>\n",
       "      <th>availability_365</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>room_type</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>Entire home/apt</td>\n",
       "      <td>1.843818e+07</td>\n",
       "      <td>6.175593e+07</td>\n",
       "      <td>40.728649</td>\n",
       "      <td>-73.960696</td>\n",
       "      <td>211.794246</td>\n",
       "      <td>8.506907</td>\n",
       "      <td>22.842418</td>\n",
       "      <td>1.306578</td>\n",
       "      <td>10.698335</td>\n",
       "      <td>111.920304</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Private room</td>\n",
       "      <td>1.946893e+07</td>\n",
       "      <td>7.247514e+07</td>\n",
       "      <td>40.729208</td>\n",
       "      <td>-73.942924</td>\n",
       "      <td>89.780973</td>\n",
       "      <td>5.377900</td>\n",
       "      <td>24.112962</td>\n",
       "      <td>1.445209</td>\n",
       "      <td>3.227717</td>\n",
       "      <td>111.203933</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Shared room</td>\n",
       "      <td>2.300378e+07</td>\n",
       "      <td>1.026241e+08</td>\n",
       "      <td>40.730514</td>\n",
       "      <td>-73.943343</td>\n",
       "      <td>70.127586</td>\n",
       "      <td>6.475000</td>\n",
       "      <td>16.600000</td>\n",
       "      <td>1.471726</td>\n",
       "      <td>4.662931</td>\n",
       "      <td>162.000862</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                           id       host_id   latitude  longitude       price  \\\n",
       "room_type                                                                       \n",
       "Entire home/apt  1.843818e+07  6.175593e+07  40.728649 -73.960696  211.794246   \n",
       "Private room     1.946893e+07  7.247514e+07  40.729208 -73.942924   89.780973   \n",
       "Shared room      2.300378e+07  1.026241e+08  40.730514 -73.943343   70.127586   \n",
       "\n",
       "                 minimum_nights  number_of_reviews  reviews_per_month  \\\n",
       "room_type                                                               \n",
       "Entire home/apt        8.506907          22.842418           1.306578   \n",
       "Private room           5.377900          24.112962           1.445209   \n",
       "Shared room            6.475000          16.600000           1.471726   \n",
       "\n",
       "                 calculated_host_listings_count  availability_365  \n",
       "room_type                                                          \n",
       "Entire home/apt                       10.698335        111.920304  \n",
       "Private room                           3.227717        111.203933  \n",
       "Shared room                            4.662931        162.000862  "
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gbroom_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<BarContainer object of 1 artists>"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.bar(\"home\", gbroom_df[\"number_of_reviews\"][0])\n",
    "plt.bar(\"room\", gbroom_df[\"number_of_reviews\"][1])\n",
    "plt.bar(\"Shared\", gbroom_df[\"number_of_reviews\"][2])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "bins_groupby_df = df.groupby"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [],
   "source": [
    "bins_groupby_df = df.groupby([\"h_listing_bins\"]).mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>host_id</th>\n",
       "      <th>latitude</th>\n",
       "      <th>longitude</th>\n",
       "      <th>price</th>\n",
       "      <th>minimum_nights</th>\n",
       "      <th>number_of_reviews</th>\n",
       "      <th>reviews_per_month</th>\n",
       "      <th>calculated_host_listings_count</th>\n",
       "      <th>availability_365</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>h_listing_bins</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0-50</td>\n",
       "      <td>1.886634e+07</td>\n",
       "      <td>6.659241e+07</td>\n",
       "      <td>40.728616</td>\n",
       "      <td>-73.951340</td>\n",
       "      <td>150.747525</td>\n",
       "      <td>6.489101</td>\n",
       "      <td>23.868266</td>\n",
       "      <td>1.383232</td>\n",
       "      <td>2.509554</td>\n",
       "      <td>108.048494</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>50-100</td>\n",
       "      <td>1.759911e+07</td>\n",
       "      <td>4.408209e+07</td>\n",
       "      <td>40.747078</td>\n",
       "      <td>-73.978586</td>\n",
       "      <td>193.961039</td>\n",
       "      <td>30.322820</td>\n",
       "      <td>1.962894</td>\n",
       "      <td>0.170033</td>\n",
       "      <td>81.474954</td>\n",
       "      <td>294.283859</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>100-150</td>\n",
       "      <td>2.113124e+07</td>\n",
       "      <td>7.951910e+07</td>\n",
       "      <td>40.754328</td>\n",
       "      <td>-73.952982</td>\n",
       "      <td>170.066964</td>\n",
       "      <td>30.611607</td>\n",
       "      <td>0.678571</td>\n",
       "      <td>0.283191</td>\n",
       "      <td>112.723214</td>\n",
       "      <td>259.647321</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>150-200</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>200-250</td>\n",
       "      <td>3.107775e+07</td>\n",
       "      <td>1.074344e+08</td>\n",
       "      <td>40.739673</td>\n",
       "      <td>-73.991947</td>\n",
       "      <td>303.150862</td>\n",
       "      <td>32.198276</td>\n",
       "      <td>0.125000</td>\n",
       "      <td>0.215714</td>\n",
       "      <td>232.000000</td>\n",
       "      <td>253.810345</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                          id       host_id   latitude  longitude       price  \\\n",
       "h_listing_bins                                                                 \n",
       "0-50            1.886634e+07  6.659241e+07  40.728616 -73.951340  150.747525   \n",
       "50-100          1.759911e+07  4.408209e+07  40.747078 -73.978586  193.961039   \n",
       "100-150         2.113124e+07  7.951910e+07  40.754328 -73.952982  170.066964   \n",
       "150-200                  NaN           NaN        NaN        NaN         NaN   \n",
       "200-250         3.107775e+07  1.074344e+08  40.739673 -73.991947  303.150862   \n",
       "\n",
       "                minimum_nights  number_of_reviews  reviews_per_month  \\\n",
       "h_listing_bins                                                         \n",
       "0-50                  6.489101          23.868266           1.383232   \n",
       "50-100               30.322820           1.962894           0.170033   \n",
       "100-150              30.611607           0.678571           0.283191   \n",
       "150-200                    NaN                NaN                NaN   \n",
       "200-250              32.198276           0.125000           0.215714   \n",
       "\n",
       "                calculated_host_listings_count  availability_365  \n",
       "h_listing_bins                                                    \n",
       "0-50                                  2.509554        108.048494  \n",
       "50-100                               81.474954        294.283859  \n",
       "100-150                             112.723214        259.647321  \n",
       "150-200                                    NaN               NaN  \n",
       "200-250                             232.000000        253.810345  "
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bins_groupby_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<BarContainer object of 1 artists>"
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Which group of host listings have the most reviews\n",
    "# new coment\n",
    "plt.bar(\"0-50\", bins_groupby_df[\"reviews_per_month\"][0])\n",
    "plt.bar(\"50-100\", bins_groupby_df[\"reviews_per_month\"][1])\n",
    "plt.bar(\"100-150\", bins_groupby_df[\"reviews_per_month\"][2])\n",
    "plt.bar(\"200-250\", bins_groupby_df[\"reviews_per_month\"][4])\n",
    "plt.bar(\"300-350\", bins_groupby_df[\"reviews_per_month\"][6])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
